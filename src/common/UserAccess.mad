import type { Either } from "Either"

import JsonParser from "Json/Parse"
import JsonPrinter from "Json/Print"



export alias UserAccessEvent = { author :: String, eventType :: String, userId :: Integer }

printUserAccessEvent :: UserAccessEvent -> String
export printUserAccessEvent = (event) => pipe(
  JsonPrinter.object,
  JsonPrinter.printJson(80),
)([
  #["eventType", JsonPrinter.string(event.eventType)],
  #["author", JsonPrinter.string(event.author)],
  #["userId", JsonPrinter.integer(event.userId)],
])

parseUserAccessEvent :: String -> Either String UserAccessEvent
export parseUserAccessEvent = (event) => JsonParser.parse(
  JsonParser.map3(
    (eventType, userId, author) => ({ eventType, userId, author }),
    JsonParser.field("eventType", JsonParser.string),
    JsonParser.field("userId", JsonParser.integer),
    JsonParser.field("author", JsonParser.string),
  ),
  event,
)
